{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chat.service.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/config/config.component.css","webpack:///./src/app/config/config.component.html","webpack:///./src/app/config/config.component.ts","webpack:///./src/app/groups/groups.component.css","webpack:///./src/app/groups/groups.component.html","webpack:///./src/app/groups/groups.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GroupsComponent } from './groups/groups.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ConfigComponent } from './config/config.component';\n\nconst routes: Routes = [\n  {path:'groups/:username', component:GroupsComponent},\n  {path: '', component:LoginComponent},\n  {path: 'chat', component:ChatComponent},\n  {path: 'config', component:ConfigComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- <div id=\\\"container\\\">\\n\\n  <input id=\\\"userInput\\\" (keyup.enter)=\\\"newUser(myValue)\\\" type=\\\"text\\\" [(ngModel)]=\\\"myValue\\\" placeholder=\\\"Please enter a username: \\\"/>\\n  <br>\\n\\n  <button id=\\\"newUserButton\\\" (click)=\\\"newUser(myValue)\\\">Submit</button>\\n\\n\\n</div> -->\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { ChatService } from './chat.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  myValue = '';\n  username;\n  private url = 'http://localhost:3000';\n  isUser = false;\n\n  constructor(chatService: ChatService, private http:HttpClient, private router:Router){\n\n  }\n  newUser(newstring: string) {\n    interface User {\n      success: string;\n      username: string;\n    }\n    this.http.get<User>(this.url + \"/api/auth?username=\"+newstring).subscribe(data => {\n      if (data.success){\n        //Is a valid user\n        this.isUser = true;\n        console.log(this.isUser);\n        this.router.navigateByUrl('/groups');\n\n      }\n      else {\n        // Not a valid user\n        console.log(\"other\");\n      }\n    });\n\n\n    this.username = newstring;\n\n\n\n    localStorage.setItem(\"username\", newstring);\n    this.myValue = \"\";\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ChatService } from './chat.service';\nimport { ChatComponent } from './chat/chat.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ConfigComponent } from './config/config.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    GroupsComponent,\n    LoginComponent,\n    ConfigComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [ChatService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport * as io from 'socket.io-client';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  private url = 'http://localhost:3000';\n  private socket;\n\n\n  constructor(private http:HttpClient) {\n  this.socket = io(this.url);\n  this.socket.emit('test', 'hello world');\n\n\n\n  }\n}\n","module.exports = \"#chat_history{\\n  margin-top: 20px;\\n  margin-left: 30px;\\n  margin-right: 30px;\\n  border: 1px solid black;\\n  background-color: #FFF;\\n  padding: 20px;\\n  overflow: scroll;\\n  border-radius:5px;\\n}\\n.linkText{\\n  background-color: green;\\n  text-decoration: none;\\n}\\n.chatMessages{\\n  background-color: #FFF;\\n  margin-left: 80px;\\n  padding-top: 10px;\\n\\n}\\n.headText{\\n  margin-left: 30px;\\n  padding-top: 15px;\\n  font-size: 24px;\\n}\\n/* .isAdmin {\\n  background-color: #d8d8d8;\\n} */\\n/* a {\\n  background-color: red;\\n} */\\n#message{\\n    margin-top: 10px;\\n    height: 80px;\\n    width: 75%;\\n    margin-left: 12.5%;\\n    background-color: white;\\n    border: 1px solid black;\\n}\\n.typeArea{\\n  margin-top: 25px;\\n  height: 130px;\\n  width: 100%;\\n\\n}\\n.subitMessageButton{\\n  margin-top: 5px;\\n  margin-left: 43%;\\n  width: 14%;\\n  height: 30px;\\n  background-color: white;\\n}\\n.deleteChannelButton{\\n  float: right;\\n  width: 6%;\\n  height: 30px;\\n  margin-right: 30px;;\\n  background-color: red;\\n}\\n/* #buttonDiv{\\n  float: right;\\n  background-color: red;\\n  width: 100px;\\n  height: 40px;\\n} */\\n.right {\\n  text-align: right;\\n}\\n.left {\\n  text-align: left;\\n}\\n.nav {\\n  width: 100%;\\n  height: 50px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.buttons{\\n  cursor: pointer;\\n  float: right;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n\\n  margin-left: 5px;\\n\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n.buttons:hover {\\n  background-color: #3c99b9;\\n}\\n#btn-group{\\n  width: 280px;\\n  margin-top: 5px;\\n  margin-right: 40px;\\n  float: right; /* Float the buttons side by side */\\n  height: 40px;\\n}\\n.close-icon\\n{\\n  cursor: pointer;\\n  margin-bottom: 60px;\\n  margin-right: 60px;\\n  display:inline;\\n  font-size: 20px;\\n  float: right;\\n  width:35px;\\n  height:35px;\\n  border-width:3px;\\n  border-style: solid;\\n  border-color:black;\\n  border-radius:100%;\\n  background-color:red;\\n  box-shadow:0px 0px 5px 2px rgba(0,0,0,0.5);\\n\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"nav\\\">\\n    <span class=\\\"headText\\\"><u>{{ groupName }}/<b>{{ channel_name }}</b></u></span>\\n    <div id=\\\"btn-group\\\">\\n    <button class=\\\"buttons\\\" (click)=\\\"logout()\\\" style=\\\"background-color:#c43636\\\">Logout</button>\\n    <button (click)=\\\"sendMessage(message)\\\" class=\\\"buttons\\\" style=\\\"background-color:black\\\">Delete</button>\\n\\n    <h3 class=\\\"userName\\\">User: {{username}}</h3>\\n    </div>\\n  </div>\\n  <!-- <div id=\\\"btn-group\\\">\\n    <button (click)=\\\"logout()\\\">Logout</button>\\n    <button>Add/Edit Users</button>\\n  </div> -->\\n  <!-- <u>{{ groupName }}/<b>{{ channel_name }}</b></u> -->\\n\\n  <div id=\\\"chat_history\\\" style=\\\"height: 500px\\\">\\n    <!-- if authorised, on click, admin will be alerted to see if they want to remove the user from the group -->\\n    <!-- TODO: Or, if auth, show config button which will open a new page (maybe modal) which will list the users in that\\n    group. From there, on click, the user will be removed.\\n         TODO: Or, show a list of users on the left, a list of groups on the right. All of these will be radio (or maybe checkboxes)\\n         after the admin selects a pair (or more ^), submit the data and either add or remove the user.\\n    -->\\n\\n\\n    <!-- <div class=\\\"chatMessages\\\" *ngFor=\\\"let message of messages\\\">\\n      {{ message.text }}\\n    </div> -->\\n    <div class=\\\"chatMessages\\\" *ngFor=\\\"let message of messages\\\">\\n      <div *ngIf=\\\"auth == 0 || auth == 1\\\">\\n        {{message.text}}\\n      <!-- Navigate to config\\n\\n      <a (click)=\\\"openConfig(message.text)\\\" style=\\\"cursor: pointer\\\"><u>{{message.text}}</u></a>\\n      CHECK IF CLICKED ON SELF - OR MAYBE ALLOW SA TO DELETE GROUPS FROM ITSELF -->\\n\\n\\n\\n      </div>\\n\\n      <div *ngIf=\\\"auth == 2\\\">\\n        {{message.text}}\\n      <!-- Else just regular -->\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"typeArea\\\">\\n  <input [(ngModel)]=\\\"message\\\" (keyup.enter)=\\\"sendMessage(messsage)\\\" type=\\\"text\\\" placeholder=\\\"message\\\" id=\\\"message\\\" name=\\\"message\\\" class=\\\"form-control\\\">\\n  <button (click)=\\\"sendMessage(message)\\\" class=\\\"subitMessageButton\\\">Send</button>\\n\\n  </div>\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { Router } from '@angular/router';\nimport {Location} from '@angular/common';\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  username: string;\n  messages=[];\n  message = '';\n  labMessages = [];\n  groupName = '';\n  connection;\n  channel_name = '';\n  auth;\n\n\n  constructor(private sockServer: SocketService, private router:Router, private _location: Location) { }\n\n  ngOnInit() {\n    this.channel_name = localStorage.getItem('channelName');\n    this.username = localStorage.getItem('username');\n    this.groupName = localStorage.getItem('groupName');\n    this.auth = Number(localStorage.getItem('auth'));\n    //this.auth = Number(this.auth);\n    console.log(\"Chat session started for user: \" + this.username);\n\n    this.connection = this.sockServer.getMessages().subscribe(message=>{\n        this.messages.push(message);\n        this.message = '';\n\n    });\n\n    this.sockServer.joinChannel(this.channel_name);\n  }\n\n  sendMessage(){\n\n    if(this.message != ''){\n      this.sockServer.sendMessage('@' + this.username + ': ' + this.message);\n    }\n\n\n\n\n\n\n    var result = this.message.split(\":\");\n    // var user = result[0];\n    // var messageContent = result[1];\n    // user = user.substr(1);\n    console.log(\" - \" + result[1]);\n\n  }\n\n  ngOnDestroy(){\n    if(this.connection){\n      this.connection.unsubscribe();\n    }\n  }\n  openConfig(test){\n    var result = test.split(\":\");\n    var user = result[0];\n    var messageContent = result[1];\n    user = user.substr(1);\n    console.log(\" - \" + user + \"  -  \" + messageContent);\n\n    localStorage.setItem(\"targetUser\", user);\n    this.router.navigateByUrl('/config', { skipLocationChange: true });\n\n\n  }\n  deleteChannel(){\n    //Will do a request to the route api/deletehannel. Will pass the channel name as a param.\n    //Will navigate user back to group list <---- maybe do this first if it's causing errors.\n  }\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n\n\n}\n","module.exports = \".container {\\n  background-color: white;\\n  width: 100%;\\n  height: 400px;\\n}\\n.leftContent {\\n  float: left;\\n  padding-left: 10px;\\n}\\n.rightContent {\\n  float: right;\\n  padding-right: 40px;\\n}\\n#errorMessage {\\n  text-decoration: underline;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1><u>Config Mode</u></h1>\\n  <span id=\\\"errorMessage\\\">{{errorMessage}}</span>\\n  <br>\\n  <span class=\\\"leftContent\\\">\\n    <h3>The user is currently subscribed to the following groups: </h3>\\n    <ul *ngFor=\\\"let group of data\\\">\\n\\n\\n      <li>{{group}}</li>\\n\\n\\n\\n    </ul>\\n  </span>\\n  <span class=\\\"rightContent\\\">\\n    <h3>Select a group to enroll user _____ in: </h3>\\n    <ul *ngFor=\\\"let group of fullData\\\">\\n\\n\\n      <label>\\n        <input type=\\\"radio\\\" name=\\\"left_group\\\" [value]='group' [(ngModel)]=\\\"right_radioSelected\\\">\\n        {{group}}\\n      </label>\\n      <br>\\n    </ul>\\n  </span>\\n  <br>\\n\\n</div>\\n<button (click)=\\\"go(left_radioSelected, right_radioSelected)\\\">Submit</button>\\n\\n<button (click)=\\\"logout()\\\">Logout</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements OnInit {\n  private url = 'http://localhost:3000';\n  left_radioSelected;\n  errorMessage;\n  constructor(private http: HttpClient, private router:Router) { }\n  data: any[] = [];\n  fullData: any[] = [];\n  //testData = ['Group', 'Group2', 'Group3', 'Group4', 'Group5', 'Group6'];\n  ngOnInit() {\n    let user = localStorage.getItem(\"targetUser\");\n    // TODO: Now gather all the groups the user is subscribed to and put that on the left, and gather the master list\n    //       Of groups and list them on the right.\n\n    //Get user's groups\n    this.http.get(this.url + \"/api/groups?username=\"+user).subscribe(\n    res => {\n      for(let k=0;k<res['groups'].length;k++){\n        this.data.push(res['groups'][k]);\n      }\n      console.log(this.data);\n    });\n\n    this.http.get(this.url + \"/api/getgroups\").subscribe(\n    res => {\n      for(let k=0;k<res['groups'].length;k++){\n        this.fullData.push(res['groups'][k]);\n      }\n\n    });\n  }\n  go(left, right){\n    if(left == right){\n      this.errorMessage = \"The user is already in this group\";\n    }\n  }\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n\n}\n","module.exports = \".listClass{\\n\\n  /* background-color: red; */\\n}\\n.leftDiv{\\n  float: left;\\n  width: 30%;\\n}\\n.label {\\n  padding-left: 30px;\\n}\\n.rightDiv {\\n  /* border-style: solid;\\n  border-width: 3px; */\\n  /* background-color: #eff3f4; */\\n  float:right;\\n  margin-right: 50px;\\n\\n}\\n.nav {\\n  width: 100%;\\n  height: 50px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.arrow-up {\\n  width: 0;\\n  height: 0;\\n  margin-left: 250px;\\n  border-left: 9px solid transparent;\\n  border-right: 9px solid transparent;\\n  border-bottom: 9px solid #d6d6d6;\\n\\n}\\n#userInput {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n\\n}\\n.userName{\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.input {\\n  width: 40%;\\n  padding: 12px 12px;\\n  border: 1.5px solid transparent;\\n  border-radius: 4px;\\n}\\n.input:focus {\\n  outline: none;\\n  border-color: #4EB8DD;\\n}\\n#btn-group{\\n  width: 600px;\\n  margin-top: 5px;\\n  margin-right: 40px;\\n  float: right; /* Float the buttons side by side */\\n  height: 40px;\\n}\\n.login-container {\\n  height: auto;\\n  width: 100%;\\n\\n\\n}\\n.form-wrapper {\\n  background-color: #fff;\\n  /* min-height: 300px; */\\n  width: 340px;\\n  margin: 0;\\n  box-shadow: 2px 4px 6px #ededed;\\n  /* border: 1px solid #eee; */\\n  border: 2px solid #d6d6d6;\\n  padding: 30px 25px;\\n  border-radius: 3px;\\n}\\n.input-group {\\n  margin: 0 0 24px 0;\\n}\\n.label {\\n  font-size: 14px;\\n  display: block;\\n  margin: 2px 0 6px 2px;\\n  font-weight: bold;\\n  color: #616161;\\n}\\n.label-flex {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.link {\\n  text-decoration: none;\\n  color: #4eb8dd;\\n  font-size: 14px;\\n  cursor: pointer;\\n}\\n.link:hover {\\n  text-decoration: underline;\\n}\\n.input {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n  background-color: #eff3f4;\\n  border: 1.5px solid transparent;\\n  font-size: 16px;\\n  border-radius: 3px;\\n  transition: 0.2s ease-in;\\n}\\n.input:focus {\\n  outline: none;\\n  border-color: #4eb8dd;\\n}\\n#error {\\n  margin-top: 10px;\\n}\\n.login-btn {\\n  width: 100%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid transparent;\\n  padding: 12px 12px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 3px;\\n}\\n.login-btn:hover {\\n  background-color: #3c99b9;\\n}\\n.buttons{\\n  cursor: pointer;\\n  float: right;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n\\n  margin-left: 5px;\\n\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n.buttons:hover {\\n  background-color: #3c99b9;\\n}\\n.p {\\n  font-size: 12px;\\n  text-align: center;\\n  color: #bbb;\\n  margin: 25px 0 0 0;\\n}\\n\"","module.exports = \"<div class=\\\"nav\\\">\\n  <span>Test</span>\\n  <div id=\\\"btn-group\\\">\\n  <button class=\\\"buttons\\\" (click)=\\\"logout()\\\" style=\\\"background-color:#87309b\\\">Logout</button>\\n  <div *ngIf=\\\"auth == 0\\\">\\n    <button class=\\\"buttons\\\" (click)=\\\"toggleAdd()\\\">Create New User</button>\\n    <button class=\\\"buttons\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"toggleRemove()\\\">Delete Users</button>\\n  </div>\\n  <div *ngIf=\\\"auth == 1\\\">\\n    <button class=\\\"buttons\\\" (click)=\\\"toggleAdd()\\\">Create New User</button>\\n\\n  </div>\\n  <h3 class=\\\"userName\\\">User: {{username}}</h3>\\n  </div>\\n</div>\\n\\n<br>\\n<div class=\\\"container\\\">\\n  <div class=\\\"leftDiv\\\">\\n    <div class=\\\"listClass\\\">\\n      <ul *ngFor=\\\"let group of userData\\\">\\n       <li><h1>{{ group.name }}</h1></li>\\n      <ul>\\n\\n      <li *ngFor=\\\"let child of group.children\\\" (click)=\\\"goToChannel(child.name, group.name)\\\">\\n          {{ child.name }}\\n      </li>\\n      </ul>\\n      <div class=\\\"label\\\" *ngIf=\\\"auth == 0 || auth == 1\\\">\\n        <h4 >Enter the name of a new channel</h4>\\n        <input type=\\\"text\\\" (keyup.enter)=\\\"newChannel(group.channelName, group.name)\\\" [(ngModel)]=\\\"group.channelName\\\" placeholder=\\\"Channel name: \\\"/>\\n        <button (click)=\\\"newChannel(group.channelName, group.name)\\\">Submit</button>\\n      </div>\\n      </ul>\\n    </div>  <br>\\n  <!-- Only show the input to create a new group if the user is auth level 0 || 1 -->\\n    <div *ngIf=\\\"auth == 0\\\">\\n      <h3 class=\\\"label\\\">Enter the name of a new group</h3>\\n      <input type=\\\"text\\\" (keyup.enter)=\\\"newGroup(groupName)\\\" [(ngModel)]=\\\"groupName\\\" placeholder=\\\"Group Name: \\\"/>\\n      <button (click)=\\\"newGroup(groupName)\\\">Submit</button>\\n    </div>\\n  </div>\\n  <div class=\\\"rightDiv\\\" *ngIf=\\\"showVar2\\\">\\n    <div class=\\\"arrow-up\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n\\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"removeUsername\\\" class=\\\"input\\\" placeholder=\\\"Enter a username to delete:\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"removeUser()\\\">Delete User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"rightDiv\\\" *ngIf=\\\"showVar\\\">\\n    <div class=\\\"arrow-up\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n\\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"newUsername\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n          </div>\\n\\n          <div class=\\\"input-group\\\">\\n            <div class=\\\"label-flex\\\">\\n              <label for=\\\"username\\\" class=\\\"label\\\">Email</label>\\n            </div>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"newEmail\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n          </div>\\n          <div class=\\\"authSelect\\\">\\n            <ul *ngFor=\\\"let auth of authLevels\\\">\\n              <label>\\n                <input type=\\\"radio\\\" name=\\\"lvl\\\" [value]='auth.auth' [(ngModel)]=\\\"authSelected\\\">\\n                {{auth.auth}}: {{auth.authName}}\\n              </label>\\n              <br>\\n            </ul>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" (click)=\\\"newUser(newUsername, newEmail, value)\\\">Add User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n  </div>\\n</div> <!--container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  username: string;\n  result = '';\n  groupName;\n  channelName;\n  index;\n  value;\n  userObj;\n  newUsername;\n  newEmail;\n  newAuth;\n  authSelected;\n  removeUsername;\n  authLevels = [\n    {\n      \"auth\": \"0\",\n      \"authName\": \"Super Admin\"\n    },\n    {\n      \"auth\": \"1\",\n      \"authName\": \"Group Admin\"\n    },\n    {\n      \"auth\": \"2\",\n      \"authName\": \"Regular User\"\n    }\n  ];\n  showVar: boolean = false;\n  showVar2: boolean = false;\n  numGroups: number;\n  data: any[] = [];\n  private url = 'http://localhost:3000';\n\n  auth; // 0 = Super Admin, 1 = Group Admin, 2 = Regular\n\n  temp;\n  //testArray: any[] = [];\n  userData: any[] = [];\n  tempData;\n  //\"Master Data Source\"\n  // data: any[] = [\n  //   {\n  //     'name': \"Sport\",\n  //     'children':\n  //     [\n  //       {\n  //         'name': \"NRL\"\n  //       },\n  //       {\n  //         'name': \"Basketball\"\n  //       },\n  //       {\n  //         'name': \"Cricket\"\n  //       }\n  //     ]\n  //   },\n  //   {\n  //     'name': \"Cooking\",\n  //     'children':\n  //     [\n  //       {\n  //         'name': \"Recipes\"\n  //       },\n  //       {\n  //         'name': \"Nutrition\"\n  //       }\n  //     ]\n  //   }\n  // ];\n  constructor(private route:ActivatedRoute, private http: HttpClient, private router:Router,private form:FormsModule) { }\n  //Just navigate without doing this, just use localStorage 🙃🙃🙃🙃🙃🙃🙃\n  ngOnInit() {\n    this.temp = localStorage.getItem('myData');\n    console.log(this.temp);\n    //this.temp2 =\n    this.tempData = JSON.parse(this.temp);\n    let otherData = JSON.parse(this.temp);\n\n    this.tempData = this.tempData.groups;\n    this.numGroups = this.tempData.length;\n\n    console.log(otherData);\n    this.auth = Number(otherData.auth);\n    localStorage.setItem(\"auth\", (this.auth));\n    // I now have the groups which the user has access to / is subscribed to.\n    this.username = this.route.snapshot.params['username'];\n\n\n\n    this.http.get(this.url + \"/api/getdata\").subscribe(\n    res => {\n\n        for(let k=0;k<res['data'].length;k++){\n          this.data.push(res['data'][k]);\n          console.log(res['data'][k]);\n        }\n        let response = res;\n\n        localStorage.setItem(\"dataSource\", JSON.stringify(this.data));\n        let testThing = localStorage.getItem(\"dataSource\");\n\n        this.populate(); //Will only display groups which the user has access to.\n\n        // TODO: Get full data source -- Get user's subscribed groups -- Filter through full data source and disregard any data\n        //that does not relate to the specific user. -- On new group: update dataSource && authData.json to add the group to the\n        //users list.\n\n    });\n\n  }\n  goToChannel(channelName, groupName){\n    console.log(channelName);\n    localStorage.setItem('groupName', groupName);\n    localStorage.setItem('channelName', channelName);\n\n    this.router.navigateByUrl('/chat', { skipLocationChange: true });\n\n  }\n\n  populate(){\n\n    // TODO: Maybe a post request to index.js to write to the user authData file. Currently the group is not being listed as\n    //       The app thinks that the user does not have access to the group. The post request will update the authData.JSON\n    //       file to include this group in the groups array.\n\n\n\n    this.userData = [];\n    let count = 0;\n    console.log(\"Num groups = \" + this.numGroups);\n    for(let x =0;x<this.data.length;x++){\n      for(let y=0;y<this.numGroups;y++){\n        if(this.data[x].name == this.tempData[y]){\n          //If this fires, it means that the group has been found from the \"master data source\"\n          // Push that group into the user data array\n          this.userData.push(\n            {\n              'name': this.data[x].name,\n              'children':[]\n            }\n          );\n\n\n          for(let j = 0;j<this.data[x].children.length;j++){\n\n\n            this.userData[count].children.push({'name': this.data[x].children[j].name});\n\n          }\n          count++;\n          // this.data[i].children.push({'name': channelName});\n        }\n      }\n    }\n    console.log(this.data);\n    localStorage.setItem('myData', JSON.stringify(this.userData));\n    this.temp = localStorage.getItem('myData');\n    console.log(this.temp);\n\n  }\n\n  newGroup(groupName){\n    console.log(this.data);\n    this.data.push(\n      {\n        'name': groupName,\n        'children':[]\n      }\n    );\n\n    console.log(groupName);\n    this.numGroups++;\n    //this.populate();\n\n    console.log(this.data);\n    this.userData.push(\n      {\n        'name': groupName,\n        'children': []\n      }\n    );\n    this.http.get(this.url + \"/api/update?username=\"+this.username + \"&groupname=\"+groupName).subscribe(\n    res => {\n        const response = res;\n        console.log(response);\n    });\n\n\n    localStorage.setItem('myData', JSON.stringify(this.userData));\n    let test = localStorage.getItem(\"myData\");\n    console.log(test);\n    //Post request here, as it will be only one variable to parse, rather than a object or array.\n\n  }\n\n  newChannel(channelName, indexFinder){\n    for(let i=0;i<this.data.length;i++){\n      // Will find which index the group is located in the MASTER DATA SOURCE\n      if(this.data[i].name == indexFinder){\n        this.data[i].children.push({'name': channelName});\n\n\n      }\n    }\n    for(let k=0;k<this.userData.length;k++){\n      // Will find which index the group is located in the USER DATA SOURCE\n      if(this.userData[k].name == indexFinder){\n        this.userData[k].children.push({'name': channelName});\n\n      }\n    }\n\n    //this.populate();\n  }\n\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n  toggleAdd(){\n    this.showVar = !this.showVar;\n  }\n  toggleRemove(){\n    this.showVar2 = !this.showVar2;\n  }\n  newUser(newUsername, newEmail){\n    if(this.authSelected == undefined){\n      this.result = \"Error - Please Select An Auth Level\";\n      return;\n\n    }\n\n    this.http.get(this.url + \"/api/reg?username=\"+newUsername + \"&email=\"+newEmail + \"&auth=\"+this.authSelected).subscribe(data => {\n      console.log(data);\n        if (data['success']){\n          this.result = \"Success - New User Added\";\n        }\n        else{\n          this.result = \"Error - A User With This Username Already Exists\";\n        }\n    });\n  }\n  removeUser(){\n    this.http.get(this.url + \"/api/delete?username=\"+this.removeUsername).subscribe(data => {\n      console.log(data);\n        if (data['success']){\n          console.log(\"Deleted\")\n        }\n        else{\n          console.log(\"Error - A User With This Username Already Exists\");\n        }\n    });\n  }\n\n}\n","module.exports = \"/* #userInput{\\n  padding-left: 30px;\\n  margin-left: 25%;\\n  height: 30px;\\n  width: 50%;\\n  background-color: #eff3f4;\\n} */\\n/* #newUserButton { */\\n/* margin-top: 10px;\\n  margin-left: 43%;\\n  width: 14%;\\n  height: 30px;\\n  background-color: white; */\\n/* margin-top: 10px;\\n  width: 14%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #606060;\\n  border: 1px solid transparent;\\n  margin-left: 43%;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 3px;\\n} */\\n#newUserButton {\\n  width: 50%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n  margin-top: 20px;\\n  margin-left: 25%;\\n  margin-right: 25%;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n#newUserButton:hover {\\n  background-color: #3c99b9;\\n}\\n#userInput:focus {\\n  outline: none;\\n  border-color: #4eb8dd;\\n\\n}\\n#error{\\n  margin-top: 10px;\\n  text-align: center;\\n}\\n#userInput {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n\\n  background-color: #eff3f4;\\n  border: 1px solid grey;\\n  font-size: 16px;\\n  border-radius: 3px;\\n  transition: 0.2s ease-in;\\n}\\n#container {\\n  background-color: #fff;\\n  /* min-height: 300px; */\\n  width: 500px;\\n  height: 180px;\\n  margin: 70px auto;\\n  box-shadow: 2px 4px 6px #ededed;\\n  /* border: 1px solid #eee; */\\n  border: 2px solid #d6d6d6;\\n  padding: 10px 25px;\\n  padding-top: 40px;\\n  border-radius: 3px;\\n\\n}\\n\"","module.exports = \"<div id=\\\"container\\\">\\n\\n  <input id=\\\"userInput\\\" (keyup.enter)=\\\"loginUser(myValue)\\\" type=\\\"text\\\" [(ngModel)]=\\\"myValue\\\" placeholder=\\\"Please enter a username: \\\"/>\\n  <br>\\n\\n  <button id=\\\"newUserButton\\\" (click)=\\\"loginUser(myValue)\\\">Submit</button>\\n  <br>\\n  <div id=\\\"error\\\">{{errorMessage}}</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\ntitle = 'app';\nmyValue = '';\nusername = 'Codie';\nprivate url = 'http://localhost:3000';\nisUser = false;\nerrorMessage = \"\";\nconstructor(chatService: ChatService, private http:HttpClient, private router:Router){\n\n}\nloginUser(userString: string) {\n  interface User {\n    success: string;\n    username: string;\n    auth: number;\n  }\n  this.http.get<User>(this.url + \"/api/auth?username=\"+userString).subscribe(data => {\n    if (data.success){\n      console.log(\"--> \" + JSON.stringify(data));\n      //Is a valid user\n      this.isUser = true;\n      localStorage.setItem('myData', JSON.stringify(data));\n\n      this.router.navigateByUrl('/groups/' + userString, { skipLocationChange: true });\n      //localStorage.setItem(\"user\", JSON.stringify(this.userObject));\n\n    }\n    else {\n      this.errorMessage = \"Username is not registered\";\n      // Not a valid user\n      console.log(\"other\");\n    }\n  });\n\n\n  this.username = userString;\n\n\n\n  localStorage.setItem(\"username\", userString);\n  this.myValue = \"\";\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private url = 'http://localhost:3000';\n  private socket;\n\n  constructor() {\n  }\n\n  sendMessage(message){\n    this.socket.emit('add-message', message);\n\n  }\n  joinChannel(channel){\n    this.socket.emit('room', channel);\n  }\n  getMessages(){\n    console.log('getMessages()');\n    this.socket = io(this.url);\n\n    // We define our observable which will observe any incoming messages\n    // from our socket.io server.\n    let observable = new Observable(observer => {\n        this.socket.on('message', (data) => {\n          console.log(\"Received message from Websocket Server\")\n          observer.next(data);\n        })\n        return () => {\n          this.socket.disconnect();\n        }\n    });\n\n    // We return our observable\n    return observable;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}