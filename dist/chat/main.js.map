{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/chat.service.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/config/config.component.css","webpack:///./src/app/config/config.component.html","webpack:///./src/app/config/config.component.ts","webpack:///./src/app/groups/groups.component.css","webpack:///./src/app/groups/groups.component.html","webpack:///./src/app/groups/groups.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GroupsComponent } from './groups/groups.component';\nimport { LoginComponent } from './login/login.component';\nimport { ChatComponent } from './chat/chat.component';\nimport { ConfigComponent } from './config/config.component';\n\nconst routes: Routes = [\n  {path:'groups/:username', component:GroupsComponent},\n  {path: '', component:LoginComponent},\n  {path: 'chat', component:ChatComponent},\n  {path: 'config', component:ConfigComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!-- <div id=\\\"container\\\">\\n\\n  <input id=\\\"userInput\\\" (keyup.enter)=\\\"newUser(myValue)\\\" type=\\\"text\\\" [(ngModel)]=\\\"myValue\\\" placeholder=\\\"Please enter a username: \\\"/>\\n  <br>\\n\\n  <button id=\\\"newUserButton\\\" (click)=\\\"newUser(myValue)\\\">Submit</button>\\n\\n\\n</div> -->\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { ChatService } from './chat.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  myValue = '';\n  username;\n  private url = 'http://localhost:3000';\n  isUser = false;\n\n  constructor(chatService: ChatService, private http:HttpClient, private router:Router){\n\n  }\n  newUser(newstring: string) {\n    interface User {\n      success: string;\n      username: string;\n    }\n    this.http.get<User>(this.url + \"/api/auth?username=\"+newstring).subscribe(data => {\n      if (data.success){\n        //Is a valid user\n        this.isUser = true;\n        console.log(this.isUser);\n        this.router.navigateByUrl('/groups');\n\n      }\n      else {\n        // Not a valid user\n        console.log(\"other\");\n      }\n    });\n\n\n    this.username = newstring;\n\n\n\n    localStorage.setItem(\"username\", newstring);\n    this.myValue = \"\";\n}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AuthService } from './auth.service';\nimport { ChatService } from './chat.service';\nimport { ChatComponent } from './chat/chat.component';\nimport { GroupsComponent } from './groups/groups.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ConfigComponent } from './config/config.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChatComponent,\n    GroupsComponent,\n    LoginComponent,\n    ConfigComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [ChatService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs';\nexport interface user {\n  username: string;\n  success: string;\n  auth: any;\n}\n\nexport interface content {\n  username: string;\n  group: string;\n  success: string;\n}\n\nexport interface channel {\n  channelName: string;\n  success: string;\n  groupName: string;\n}\n\n\n// export interface user {\n//   username: string;\n//   success: number;\n//   auth: any;\n// }\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  data2: any;\n  tempVar: any;\n  result: any;\n  private url = 'http://localhost:3000';\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string){\n    return this.http.post<user>('/api/auth', {username: username, password: password });\n  }\n  newUser(username: string, password: string, auth: number){\n    return this.http.post<user>('/api/register', {username: username, password: password, auth: auth});\n  }\n\n  newChannel(channelname: string, groupname: string){\n    return this.http.post<channel>('/api/newchannel', {group: groupname, channel: channelname });\n  }\n  \n  newGroup(groupname: string){\n    return this.http.post<channel>('/api/newgroup', {group: groupname});\n  }\n\n  addUser(username: string, channel: string, group: string){\n    return this.http.post<content>('/api/adduser', {username: username, channel: channel, group: group});\n  }\n\n  fetch(username: string){\n    console.log(\"FETCH!\");\n    return this.http.post<user>('/api/fetch', {username: username});\n\n  }\n  returnData(username: string){\n\n    this.http.get(this.url + \"/api/fetch?username=\"+username).pipe(map((res : any) => console.log(\"Testing\" + res)));\n\n\n\n  }\n  something(){\n    return this.http.get('/api/get').map(result => this.result = JSON.stringify(result));\n  }\n\n  getUserData(): Promise<any> {\n    return this.http.get('/api/fetchdata')\n      .toPromise()\n      .then(response => JSON.stringify(response))\n      .catch(Error);\n  }\n  getsomeData(){\n    return this.http.get('/api/get').map((res:Response) => res);\n  }\n  getData(){\n    var something = this.http.get('/api/get').map(response => console.log(response));\n    return something;\n  }\n  somefunction(): Promise<any> {\n    return this.http.get('/api/get')\n    .toPromise()\n    .then(response => JSON.stringify(response))\n    .catch(Error);\n    //.map((res : Response) => console.log(\"Testing \" + JSON.stringify(res.json)));\n  }\n  message(username: string, group: string, channel: string, message: string){\n    return this.http.post<content>('/api/message', {username: username, group: group, channel: channel, message: message });\n  }\n  getMessages(channel: string){\n    return this.http.post<content>('/api/getmessages', {channel: channel});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport * as io from 'socket.io-client';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n  private url = 'http://localhost:3000';\n  private socket;\n\n\n  constructor(private http:HttpClient) {\n  this.socket = io(this.url);\n  this.socket.emit('test', 'hello world');\n\n\n\n  }\n}\n","module.exports = \"#chat_history{\\n  margin-top: 9px;\\n  margin-left: 5%;\\n  margin-right: 5%;\\n\\n  border: 1px solid black;\\n  background-color: #FFF;\\n  /* padding: 20px; */\\n  overflow: scroll;\\n  border-radius:5px;\\n  width: 90%;\\n}\\n.linkText{\\n  background-color: green;\\n  text-decoration: none;\\n}\\n.chatMessages{\\n  background-color: #FFF;\\n  margin-left: 80px;\\n  padding-top: 10px;\\n\\n}\\n.headText{\\n  margin-left: 30px;\\n  padding-top: 15px;\\n  font-size: 24px;\\n  float:left;\\n}\\n/* .isAdmin {\\n  background-color: #d8d8d8;\\n} */\\n/* a {\\n  background-color: red;\\n} */\\n#message{\\n    margin-top: 10px;\\n    height: 80px;\\n    width: 75%;\\n    margin-left: 12.5%;\\n    background-color: white;\\n    border: 1px solid black;\\n}\\n.typeArea{\\n  margin-top: 25px;\\n  height: 130px;\\n  width: 100%;\\n\\n}\\n.arrow-up2 {\\n  width: 0;\\n  height: 0;\\n  margin-left: 250px;\\n  border-left: 9px solid transparent;\\n  border-right: 9px solid transparent;\\n  border-bottom: 9px solid #d6d6d6;\\n\\n}\\n.subitMessageButton{\\n  margin-top: 5px;\\n  margin-left: 43%;\\n  width: 14%;\\n  height: 30px;\\n  background-color: white;\\n}\\n.deleteChannelButton{\\n  float: right;\\n  width: 6%;\\n  height: 30px;\\n  margin-right: 30px;;\\n  background-color: red;\\n}\\n/* #buttonDiv{\\n  float: right;\\n  background-color: red;\\n  width: 100px;\\n  height: 40px;\\n} */\\n.right {\\n  text-align: right;\\n}\\n.left {\\n  text-align: left;\\n}\\n.nav {\\n  width: 100%;\\n  height: 60px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.buttons{\\n  cursor: pointer;\\n  float: right;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n\\n\\n  margin-right: 10px;\\n\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n.buttons:hover {\\n  background-color: #3c99b9;\\n}\\n.btn-group{\\n\\n  padding-bottom: 15px;\\n  margin-top: 5px;\\n  margin-right: 30px;\\n\\n  width: 600px;\\n\\n  float: right; /* Float the buttons side by side */\\n\\n}\\n.close-icon\\n{\\n  cursor: pointer;\\n  margin-bottom: 60px;\\n  margin-right: 60px;\\n  display:inline;\\n  font-size: 20px;\\n  float: right;\\n  width:35px;\\n  height:35px;\\n  border-width:3px;\\n  border-style: solid;\\n  border-color:black;\\n  border-radius:100%;\\n  background-color:red;\\n  box-shadow:0px 0px 5px 2px rgba(0,0,0,0.5);\\n\\n}\\n.input {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n  background-color: #eff3f4;\\n  border: 1.5px solid transparent;\\n  font-size: 16px;\\n  border-radius: 3px;\\n  transition: 0.2s ease-in;\\n}\\n.input:focus {\\n  outline: none;\\n  border-color: #4eb8dd;\\n}\\n.input-group {\\n  margin: 0 0 24px 0;\\n}\\n.label {\\n  font-size: 14px;\\n  display: block;\\n  margin: 2px 0 6px 2px;\\n  font-weight: bold;\\n  color: #616161;\\n}\\n.label-flex {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.login-btn {\\n  width: 100%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid transparent;\\n  padding: 12px 12px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 3px;\\n}\\n.login-btn:hover {\\n  background-color: #3c99b9;\\n}\\n.form-wrapper {\\n  background-color: #fff;\\n  /* min-height: 300px; */\\n  width: 340px;\\n  margin: 0;\\n  box-shadow: 2px 4px 6px #ededed;\\n  /* border: 1px solid #eee; */\\n  border: 2px solid #d6d6d6;\\n  padding: 30px 25px;\\n  border-radius: 3px;\\n}\\n.removeDiv {\\n  /* border-style: solid;\\n  border-width: 3px; */\\n  /* background-color: #eff3f4; */\\n  margin-bottom: 20px;\\n  float:right;\\n  margin-right: 5%;\\n\\n}\\n.addDiv {\\n  margin-bottom: 20px;\\n  float: right;\\n  margin-right: 10%;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"nav\\\">\\n    <span class=\\\"headText\\\"><u>{{ groupName }}/<b>{{ channel_name }}</b></u></span>\\n    <div *ngIf=\\\"auth == 0 || auth == 1\\\">\\n      <div class=\\\"btn-group\\\">\\n      <button class=\\\"buttons\\\" (click)=\\\"logout()\\\" style=\\\"background-color:#c43636\\\">Logout</button>\\n      <button (click)=\\\"toggleRemove()\\\" class=\\\"buttons\\\" style=\\\"background-color:black\\\">Remove User</button>\\n      <button (click)=\\\"toggleAdd()\\\" class=\\\"buttons\\\" style=\\\"background-color:#1f9134\\\">Add User</button>\\n      <button (click)=\\\"back()\\\" class=\\\"buttons\\\" style=\\\"background-color:#12dfdd\\\">Back</button>\\n\\n\\n      </div>\\n    </div>\\n\\n    <div *ngIf=\\\"auth == 2\\\">\\n      <div class=\\\"btn-group\\\">\\n      <button class=\\\"buttons\\\" (click)=\\\"logout()\\\" style=\\\"background-color:#c43636\\\">Logout</button>\\n\\n\\n      <!-- <h3 class=\\\"userName\\\">User: {{username}}</h3> -->\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n\\n\\n     <!--    Display form to remove a user from this channel. TODO: Only show if the user is auth LVL 0 or 1 -->\\n  <div class=\\\"removeDiv\\\" *ngIf=\\\"showVar\\\">\\n    <div class=\\\"arrow-up2\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n\\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" (keyup.enter)=\\\"removeUser()\\\" [(ngModel)]=\\\"removeUsername\\\" class=\\\"input\\\" placeholder=\\\"Remove a user from this channel:\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"removeUser()\\\">Delete User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"addDiv\\\" *ngIf=\\\"showVar2\\\">\\n    <div class=\\\"arrow-up2\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n\\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" (keyup.enter)=\\\"addUser()\\\" [(ngModel)]=\\\"addUsername\\\" class=\\\"input\\\" placeholder=\\\"Add a user to this channel:\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" style=\\\"background-color:#1f9134\\\" (click)=\\\"addUser()\\\">Add User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <!-- <div id=\\\"btn-group\\\">\\n    <button (click)=\\\"logout()\\\">Logout</button>\\n    <button>Add/Edit Users</button>\\n  </div> -->\\n  <!-- <u>{{ groupName }}/<b>{{ channel_name }}</b></u> -->\\n\\n  <div id=\\\"chat_history\\\" style=\\\"height: 400px\\\">\\n    <!-- if authorised, on click, admin will be alerted to see if they want to remove the user from the group -->\\n    <!-- TODO: Or, if auth, show config button which will open a new page (maybe modal) which will list the users in that\\n    group. From there, on click, the user will be removed.\\n         TODO: Or, show a list of users on the left, a list of groups on the right. All of these will be radio (or maybe checkboxes)\\n         after the admin selects a pair (or more ^), submit the data and either add or remove the user.\\n    -->\\n\\n\\n    <!-- <div class=\\\"chatMessages\\\" *ngFor=\\\"let message of messages\\\">\\n      {{ message.text }}\\n    </div> -->\\n    <div class=\\\"chatMessages\\\" *ngFor=\\\"let message of messages\\\">\\n      <div *ngIf=\\\"auth == 0 || auth == 1\\\">\\n        {{message.text}}\\n      <!-- Navigate to config\\n\\n      <a (click)=\\\"openConfig(message.text)\\\" style=\\\"cursor: pointer\\\"><u>{{message.text}}</u></a>\\n      CHECK IF CLICKED ON SELF - OR MAYBE ALLOW SA TO DELETE GROUPS FROM ITSELF -->\\n\\n\\n\\n      </div>\\n\\n      <div *ngIf=\\\"auth == 2\\\">\\n        {{message.text}}\\n      <!-- Else just regular -->\\n      </div>\\n\\n    </div>\\n\\n\\n\\n\\n  </div>\\n\\n  <div class=\\\"typeArea\\\">\\n  <input [(ngModel)]=\\\"message\\\" (keyup.enter)=\\\"sendMessage(messsage)\\\" type=\\\"text\\\" placeholder=\\\"message\\\" id=\\\"message\\\" name=\\\"message\\\" class=\\\"form-control\\\">\\n  <button (click)=\\\"sendMessage(message)\\\" class=\\\"subitMessageButton\\\">Send</button>\\n\\n  </div>\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SocketService } from '../socket.service';\nimport { AuthService } from '../auth.service';\n\nimport { Router } from '@angular/router';\nimport {Location} from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport * as io from 'socket.io-client';\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n\n  username: string;\n  messages=[];\n  message = '';\n  labMessages = [];\n  groupName = '';\n  connection;\n  showVar: boolean = false;\n  showVar2: boolean = false;\n  channel_name = '';\n  auth;\n  removeUsername;\n  addUsername;\n  result;\n  msgString;\n  private url = 'http://localhost:3000';\n\n  constructor(private authService: AuthService, private sockServer: SocketService, private router:Router, private _location: Location, private http: HttpClient) { }\n\n  ngOnInit() {\n    //Get local data\n    this.channel_name = localStorage.getItem('channelName');\n    this.username = localStorage.getItem('currentUser');\n    this.groupName = localStorage.getItem('groupName');\n    this.auth = Number(localStorage.getItem('user_auth'));\n    console.log(\"Channel \" + this.channel_name);\n    console.log(\"Username \" + this.username);\n    console.log(\"Group \" + this.groupName);\n    console.log(\"Auth \" + this.auth);\n    console.log(\"Chat session started for user: \" + this.username);\n    //Get messages\n\n    this.connection = this.sockServer.getMessages().subscribe(message=>{\n\n        this.messages.push(message);\n        this.message = '';\n        console.log(this.messages);\n\n    });\n\n    this.sockServer.joinChannel(this.channel_name, this.username);\n    this.getMsg();\n  }\n\n  getMsg(){\n    this.authService.getMessages(this.channel_name).subscribe(\n      data => {\n        //console.log(\"SOMETHING HAS HAPPENED\");\n        //console.log(data['data']);\n        this.messages = [];\n        for(let i = 0;i<data['data'].length;i++){\n          this.msgString = \"@\" + data['data'][i].username + ': ' + data['data'][i].message;\n          this.messages.push({\n            'type': \"message\",\n            'text': this.msgString\n          });\n          this.msgString = '';\n        }\n      }\n    )\n  }\n\n  sendMessage(){\n    //Send message to socket service\n    if(this.message != ''){\n      this.sockServer.sendMessage('@' + this.username + ': ' + this.message);\n    }\n    this.authService.message(this.username, this.groupName, this.channel_name, this.message).subscribe(\n      data=>{\n        console.log(\"New Message\");\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    )\n    console.log(\"MESSAGES ARRAY\");\n    console.log(this.messages);\n    this.getMsg();\n  }\n  //Unsubscribe from connection\n  ngOnDestroy(){\n    if(this.connection){\n      this.connection.unsubscribe();\n    }\n  }\n\n  //Clear local storage and navigate back to the root\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n  //Toggles user remove form\n  toggleRemove(){\n    this.showVar = !this.showVar;\n    if(this.showVar2){\n      this.showVar2 = !this.showVar2;\n    }\n\n  }\n  //Toggles user add form\n  toggleAdd(){\n    this.showVar2 = !this.showVar2;\n    if(this.showVar){\n      this.showVar = !this.showVar;\n    }\n\n  }\n  back(){\n    this.router.navigateByUrl('/groups?username=' + this.username, { skipLocationChange: true });\n  }\n  //Sends a request to the server to add the specified user to the current group that is being viewed\n  addUser(){\n    this.http.get(this.url + \"/api/adduser?username=\"+this.addUsername + \"&group=\"+this.groupName).subscribe(data => {\n      console.log(data);\n        if (data['success']){\n          this.result = \"Success\";\n        }\n        else{\n          this.result = \"Error\";\n        }\n    });\n  }\n//Sends a request to the server to remove the specified user from the current channel that is being viewed\n  removeUser(){\n    this.http.get(this.url + \"/api/delete?username=\"+this.removeUsername + \"&group=\"+this.groupName + \"&channel=\" + this.channel_name).subscribe(data => {\n      console.log(data);\n        if (data['success']){\n          this.result = \"Success\";\n        }\n        else{\n          this.result = \"Error\";\n        }\n    });\n    this.router.navigateByUrl('/groups/' + this.username, { skipLocationChange: true });\n\n  }\n\n\n}\n","module.exports = \".container {\\n  background-color: white;\\n  width: 100%;\\n  height: 400px;\\n}\\n.leftContent {\\n  float: left;\\n  padding-left: 10px;\\n}\\n.rightContent {\\n  float: right;\\n  padding-right: 40px;\\n}\\n#errorMessage {\\n  text-decoration: underline;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1><u>Config Mode</u></h1>\\n  <span id=\\\"errorMessage\\\">{{errorMessage}}</span>\\n  <br>\\n  <span class=\\\"leftContent\\\">\\n    <h3>The user is currently subscribed to the following groups: </h3>\\n    <ul *ngFor=\\\"let group of data\\\">\\n\\n\\n      <li>{{group}}</li>\\n\\n\\n\\n    </ul>\\n  </span>\\n  <span class=\\\"rightContent\\\">\\n    <h3>Select a group to enroll user _____ in: </h3>\\n    <ul *ngFor=\\\"let group of fullData\\\">\\n\\n\\n      <label>\\n        <input type=\\\"radio\\\" name=\\\"left_group\\\" [value]='group' [(ngModel)]=\\\"right_radioSelected\\\">\\n        {{group}}\\n      </label>\\n      <br>\\n    </ul>\\n  </span>\\n  <br>\\n\\n</div>\\n<button (click)=\\\"go(left_radioSelected, right_radioSelected)\\\">Submit</button>\\n\\n<button (click)=\\\"logout()\\\">Logout</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements OnInit {\n  private url = 'http://localhost:3000';\n  left_radioSelected;\n  errorMessage;\n  constructor(private http: HttpClient, private router:Router) { }\n  data: any[] = [];\n  fullData: any[] = [];\n  //testData = ['Group', 'Group2', 'Group3', 'Group4', 'Group5', 'Group6'];\n  ngOnInit() {\n    let user = localStorage.getItem(\"targetUser\");\n    // TODO: Now gather all the groups the user is subscribed to and put that on the left, and gather the master list\n    //       Of groups and list them on the right.\n\n    //Get user's groups\n    this.http.get(this.url + \"/api/groups?username=\"+user).subscribe(\n    res => {\n      for(let k=0;k<res['groups'].length;k++){\n        this.data.push(res['groups'][k]);\n      }\n      console.log(this.data);\n    });\n\n    this.http.get(this.url + \"/api/getgroups\").subscribe(\n    res => {\n      for(let k=0;k<res['groups'].length;k++){\n        this.fullData.push(res['groups'][k]);\n      }\n\n    });\n  }\n  go(left, right){\n    if(left == right){\n      this.errorMessage = \"The user is already in this group\";\n    }\n  }\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n\n}\n","module.exports = \".listClass{\\n\\n  /* background-color: red; */\\n}\\n.leftDiv{\\n  float: left;\\n  width: 40%;\\n}\\n.label {\\n  padding-left: 30px;\\n}\\n.rightDiv {\\n  /* border-style: solid;\\n  border-width: 3px; */\\n  /* background-color: #eff3f4; */\\n  float:right;\\n  margin-right: 90px;\\n\\n}\\n.nav {\\n  width: 100%;\\n  height: 60px;\\n  background-color: white;\\n  border: 1px solid grey;\\n}\\n.arrow-up {\\n  width: 0;\\n  height: 0;\\n  margin-left: 125px;\\n  border-left: 9px solid transparent;\\n  border-right: 9px solid transparent;\\n  border-bottom: 9px solid #d6d6d6;\\n\\n}\\n.arrow-up2 {\\n  width: 0;\\n  height: 0;\\n  margin-left: 15px;\\n  border-left: 9px solid transparent;\\n  border-right: 9px solid transparent;\\n  border-bottom: 9px solid #d6d6d6;\\n\\n}\\n.arrow-up3 {\\n  width: 0;\\n  height: 0;\\n  margin-left: 280px;\\n  border-left: 9px solid transparent;\\n  border-right: 9px solid transparent;\\n  border-bottom: 9px solid #d6d6d6;\\n\\n}\\n#userInput {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n\\n}\\n.userName{\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.input {\\n  width: 40%;\\n  padding: 12px 12px;\\n  border: 1.5px solid transparent;\\n  border-radius: 4px;\\n}\\n.input:focus {\\n  outline: none;\\n  border-color: #4EB8DD;\\n}\\n#btn-group{\\n  width: 600px;\\n  margin-top: 5px;\\n  margin-right: 40px;\\n  float: right; /* Float the buttons side by side */\\n  height: 40px;\\n}\\n.login-container {\\n  height: auto;\\n  width: 100%;\\n  \\n\\n\\n}\\n.form-wrapper {\\n  background-color: #fff;\\n  /* min-height: 300px; */\\n  width: 340px;\\n  margin: 0;\\n  box-shadow: 2px 4px 6px #ededed;\\n  /* border: 1px solid #eee; */\\n  border: 2px solid #d6d6d6;\\n  padding: 30px 25px;\\n  border-radius: 3px;\\n}\\n.input-group {\\n  margin: 0 0 24px 0;\\n}\\n.label {\\n  font-size: 14px;\\n  display: block;\\n  margin: 2px 0 6px 2px;\\n  font-weight: bold;\\n  color: #616161;\\n}\\n.label-flex {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.link {\\n  text-decoration: none;\\n  color: #4eb8dd;\\n  font-size: 14px;\\n  cursor: pointer;\\n}\\n.link:hover {\\n  text-decoration: underline;\\n}\\n.input {\\n  width: 100%;\\n  padding: 12px 12px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n  background-color: #eff3f4;\\n  border: 1.5px solid transparent;\\n  font-size: 16px;\\n  border-radius: 3px;\\n  transition: 0.2s ease-in;\\n}\\n.input:focus {\\n  outline: none;\\n  border-color: #4eb8dd;\\n}\\n#error {\\n  margin-top: 10px;\\n}\\n.login-btn {\\n  width: 100%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid transparent;\\n  padding: 12px 12px;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 3px;\\n}\\n.login-btn:hover {\\n  background-color: #3c99b9;\\n}\\n.buttons{\\n  cursor: pointer;\\n  float: right;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n\\n  margin-left: 5px;\\n\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n.buttons:hover {\\n  background-color: #3c99b9;\\n}\\n.p {\\n  font-size: 12px;\\n  text-align: center;\\n  color: #bbb;\\n  margin: 25px 0 0 0;\\n}\\n\"","module.exports = \"<div class=\\\"nav\\\">\\n  <span>Chat</span>\\n  <div id=\\\"btn-group\\\">\\n    <button class=\\\"buttons\\\" (click)=\\\"logout()\\\" style=\\\"background-color:#87309b\\\">Logout</button>\\n    <div *ngIf=\\\"auth == 0\\\">\\n      <button class=\\\"buttons\\\" style=\\\"background-color:#d43636\\\" (click)=\\\"toggleGroup()\\\">Add User To Group</button>\\n      <button class=\\\"buttons\\\" (click)=\\\"toggleAdd()\\\">Create New User</button>\\n      <button class=\\\"buttons\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"toggleRemove()\\\">Delete Users</button>\\n    </div>\\n    <div *ngIf=\\\"auth == 1\\\">\\n      <button class=\\\"buttons\\\" (click)=\\\"toggleAdd()\\\">Create New User</button>\\n\\n    </div>\\n    <h3 class=\\\"userName\\\">User: {{username}}</h3>\\n  </div>\\n</div>\\n\\n<br>\\n\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"leftDiv\\\">\\n    <div class=\\\"listClass\\\">\\n      <ul *ngFor=\\\"let group of groups2\\\">\\n       <li><h1>{{ group.name }}</h1></li>\\n      <ul>\\n\\n      <li *ngFor=\\\"let child of group.channels\\\" (click)=\\\"goToChannel(child.name, group.name)\\\">\\n          {{ child.name }}\\n      </li>\\n      </ul>\\n      <div class=\\\"label\\\" *ngIf=\\\"auth == 0 || auth == 1\\\">\\n        <h4 >Enter the name of a new channel</h4>\\n        <input type=\\\"text\\\" (keyup.enter)=\\\"newChannel(group.channelName, group.name)\\\" [(ngModel)]=\\\"group.channelName\\\" placeholder=\\\"Channel name: \\\"/>\\n        <button (click)=\\\"newChannel(group.channelName, group.name)\\\">Submit</button>\\n      </div>\\n      </ul>\\n    </div>  <br>\\n  <!-- Only show the input to create a new group if the user is auth level 0 || 1 -->\\n    <div *ngIf=\\\"auth == 0\\\">\\n      <h3 class=\\\"label\\\">Enter the name of a new group</h3>\\n      <input type=\\\"text\\\" (keyup.enter)=\\\"newGroup(groupName)\\\" [(ngModel)]=\\\"groupName\\\" placeholder=\\\"Group Name: \\\"/>\\n      <button (click)=\\\"newGroup(groupName)\\\">Submit</button>\\n    </div>\\n  </div>\\n  <div class=\\\"rightDiv\\\" *ngIf=\\\"showVar2\\\">\\n    <div class=\\\"arrow-up2\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n\\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" (keyup.enter)=\\\"removeUser()\\\" [(ngModel)]=\\\"removeUsername\\\" class=\\\"input\\\" placeholder=\\\"Enter a username to delete:\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"removeUser()\\\">Delete User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"rightDiv\\\" *ngIf=\\\"showVar3\\\">\\n    <div class=\\\"arrow-up3\\\"></div>\\n    <div class=\\\"login-container\\\">\\n\\n      <div class=\\\"form-wrapper\\\">\\n        \\n        <div class=\\\"form\\\">\\n          <div class=\\\"input-group\\\">\\n            <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n            <input type=\\\"text\\\" (keyup.enter)=\\\"removeUser()\\\" [(ngModel)]=\\\"removeUsername\\\" class=\\\"input\\\" placeholder=\\\"Enter a username to delete:\\\">\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"login-btn\\\" style=\\\"background-color:#c43636\\\" (click)=\\\"removeUser()\\\">Delete User</button> <br>\\n          <div id=\\\"error\\\">{{result}}</div>\\n        </div>\\n\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"rightDiv\\\" *ngIf=\\\"showVar\\\">\\n    <div class=\\\"arrow-up\\\"></div>\\n      <div *ngIf=\\\"auth == 0\\\">\\n        <div class=\\\"login-container\\\">\\n\\n          <div class=\\\"form-wrapper\\\">\\n\\n            <div class=\\\"form\\\">\\n              <div class=\\\"input-group\\\">\\n                <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newUsername\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n              </div>\\n\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"label-flex\\\">\\n                  <label for=\\\"username\\\" class=\\\"label\\\">Password</label>\\n                </div>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newPwd\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n              </div>\\n              <div class=\\\"authSelect\\\">\\n                <ul *ngFor=\\\"let auth of authLevels\\\">\\n                  <label>\\n                    <input type=\\\"radio\\\" name=\\\"lvl\\\" [value]='auth.auth' [(ngModel)]=\\\"authSelected\\\">\\n                    {{auth.auth}}: {{auth.authName}}\\n                  </label>\\n                  <br>\\n                </ul>\\n              </div>\\n\\n              <button type=\\\"submit\\\" class=\\\"login-btn\\\" (click)=\\\"newUser(newUsername, newPwd, authSelected)\\\">Add User</button> <br>\\n              <div id=\\\"error\\\">{{result}}</div>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n      </div><!--Testing-->\\n      <div *ngIf=\\\"auth == 1\\\">\\n        <div class=\\\"login-container\\\">\\n\\n          <div class=\\\"form-wrapper\\\">\\n\\n            <div class=\\\"form\\\">\\n              <div class=\\\"input-group\\\">\\n                <label for=\\\"username\\\" class=\\\"label\\\">Username</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"newUsername\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n              </div>\\n\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"label-flex\\\">\\n                  <label for=\\\"username\\\" class=\\\"label\\\">Email</label>\\n                </div>\\n                <input type=\\\"email\\\" [(ngModel)]=\\\"newEmail\\\" class=\\\"input\\\" placeholder=\\\"\\\">\\n              </div>\\n\\n\\n              <button type=\\\"submit\\\" class=\\\"login-btn\\\" (click)=\\\"newUser(newUsername, newEmail)\\\">Add User</button> <br>\\n              <div id=\\\"error\\\">{{result}}</div>\\n            </div>\\n\\n\\n          </div>\\n        </div>\\n      </div><!--Testing-->\\n  </div>\\n</div> <!--container -->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { AuthService } from '../auth.service';\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  username: string;\n  result = '';\n  groupName;\n  channelName;\n  index;\n  value;\n  y;\n  userObj;\n  newUsername;\n  newPwd;\n  newAuth;\n  //username;\n  authSelected = 2;\n  removeUsername;\n  authLevels = [\n    {\n      \"auth\": \"0\",\n      \"authName\": \"Super Admin\"\n    },\n    {\n      \"auth\": \"1\",\n      \"authName\": \"Group Admin\"\n    },\n    {\n      \"auth\": \"2\",\n      \"authName\": \"Regular User\"\n    }\n  ];\n\n  showVar: boolean = false;\n  showVar2: boolean = false;\n  showVar3: boolean = false;\n\n  numGroups: number;\n  data: any[] = [];\n  private url = 'http://localhost:3000';\n\n  auth; // 0 = Super Admin, 1 = Group Admin, 2 = Regular\n  user_data: any;\n  temp;\n  testVar;\n\n  testArray;\n  z: any;\n\n  userData: any[] = [];\n  tempData;\n  x: any;\n  groups = [];\n\n  channels = [];\n  groups2: any[] = [];\n\n  constructor(private authservice: AuthService, private route:ActivatedRoute, private http: HttpClient, private router:Router,private form:FormsModule) {\n\n  }\n  //  1: Get groups that user is in\n  //  2: Get channels within those groups\n  ngOnInit() {\n    this.auth = localStorage.getItem('user_auth');\n    this.username = localStorage.getItem('currentUser');\n    this.getUserData();\n\n  }\n  newUser(username: string, password: string, auth: number){\n    this.authservice.newUser(username, password, auth).subscribe(data => {\n\n    });\n  }\n  addChannel(){\n    // TODO: post to 'credentials' & 'groups'\n    // TODO: ensure that the data is refreshed to show new groups\n\n  }\n\n  // }\n  //Navigate to a channel chat room on click\n  goToChannel(channelName, groupName){\n\n    localStorage.setItem('groupName', groupName);\n    localStorage.setItem('channelName', channelName);\n\n    console.log(\"GROUP \" + groupName + \" CHANNEL \" + channelName);\n\n\n    this.router.navigateByUrl('/chat', { skipLocationChange: true });\n\n  }\n  //Get data specific to that user - groups and also channels within that group.\n  getUserData(){\n    this.groups2 = [];\n    this.http.get('/api/get?username='+this.username).subscribe(data => {\n      this.user_data = data['data'];\n      for(let i=0;i<this.user_data.length;i++){\n\n        this.groups2.push(\n\n          {\n            'name': this.user_data[i].groupname,\n            'channels': []\n          }\n      );\n        for(let j=0;j<this.user_data[i].channels.length;j++){\n\n          this.groups2[i].channels.push(\n              {\n                'name': this.user_data[i].channels[j]\n              }\n          );\n        }\n\n      }\n\n\n    });\n  }\n\n\n\n  //Request is sent to the server with the username and the group name\n\n\n  newChannel(channel: string, group: string){\n\n    this.authservice.newChannel(channel, group).subscribe( data => {\n        //console.log(typeof(data['success']));\n        //this.result = data['success']\n        if (data['success'] == \"false\"){\n          console.log(\"MATCHES\");\n        }\n        else if(data['success'] == \"true\"){\n          console.log(\"Success\");\n        }\n    });\n    \n    this.getUserData();\n\n  }\n\n  newGroup(group: string){\n    this.authservice.newGroup(group).subscribe( data => {\n\n    });\n\n    this.getUserData();\n  }\n\n//Clears local storage and navigates back to the root\n  logout(){\n    localStorage.clear();\n    this.router.navigateByUrl('');\n  }\n  //Toggles add form\n  toggleAdd(){\n    this.showVar = !this.showVar;\n    this.result = \" \";\n    if(this.showVar2){\n      this.showVar2 = !this.showVar2;\n    }\n    else if(this.showVar3){\n      this.showVar3 = !this.showVar3;\n    }\n  }\n  //Toggles user remove form\n  toggleRemove(){\n    this.showVar2 = !this.showVar2;\n    this.result = \" \";\n    if(this.showVar){\n      this.showVar = !this.showVar;\n\n    }\n    else if(this.showVar3){\n      this.showVar3 = !this.showVar3;\n    }\n  }\n  toggleGroup(){\n    this.showVar3 = !this.showVar3;\n    this.result = \" \";\n    if(this.showVar){\n      this.showVar = !this.showVar;\n    }\n    else if(this.showVar2){\n      this.showVar2 = !this.showVar2;\n    }\n  }\n  //Takes in new user details and sends a request to the server to add a new employee\n  // newUser(newUsername, newEmail){\n  //   if(this.authSelected == undefined){\n  //     this.result = \"Error - Please Select An Auth Level\";\n  //     return;\n  //\n  //   }\n  //\n  //   this.http.post(this.url + \"/api/reg?username=\"+newUsername + \"&email=\"+newEmail + \"&auth=\"+this.authSelected).subscribe(data => {\n  //     console.log(data);\n  //       if (data['success']){\n  //         this.result = \"Success - New User Added\";\n  //       }\n  //       else{\n  //         this.result = \"Error - A User With This Username Already Exists\";\n  //       }\n  //   });\n  // }\n  //Sends a request to the server to remove a user\n  removeUser(){\n    this.http.get(this.url + \"/api/delete?username=\"+this.removeUsername).subscribe(data => {\n      console.log(data);\n        if (data['success']){\n          this.result = \"User \" + this.removeUsername + \" Has Been Deleted.\";\n\n        }\n        else{\n          this.result = \"Error - No User With This Username Was Found\";\n        }\n    });\n  }\n\n}\n","module.exports = \"/* #userInput{\\n  padding-left: 30px;\\n  margin-left: 25%;\\n  height: 30px;\\n  width: 50%;\\n  background-color: #eff3f4;\\n} */\\n/* #newUserButton { */\\n/* margin-top: 10px;\\n  margin-left: 43%;\\n  width: 14%;\\n  height: 30px;\\n  background-color: white; */\\n/* margin-top: 10px;\\n  width: 14%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #606060;\\n  border: 1px solid transparent;\\n  margin-left: 43%;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 3px;\\n} */\\n#newUserButton {\\n  width: 50%;\\n  color: #fff;\\n  text-align: center;\\n  background-color: #4eb8dd;\\n  border: 1px solid black;\\n  padding: 10px 10px;\\n  margin-top: 20px;\\n  margin-left: 25%;\\n  margin-right: 25%;\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n\\n}\\n#newUserButton:hover {\\n  background-color: #3c99b9;\\n}\\n#userInput:focus {\\n  outline: none;\\n  border-color: #4eb8dd;\\n\\n}\\n#error{\\n  margin-top: 10px;\\n  text-align: center;\\n}\\n.userInput {\\n  width: 100%;\\n  padding: 12px 12px;\\n  margin-bottom: 30px;\\n  box-sizing: border-box;\\n/*   background-color: #eee; */\\n\\n  background-color: #eff3f4;\\n  border: 1px solid grey;\\n  font-size: 16px;\\n  border-radius: 3px;\\n  transition: 0.2s ease-in;\\n}\\n#container {\\n  background-color: #fff;\\n  /* min-height: 300px; */\\n  width: 500px;\\n  height: 230px;\\n  margin: 70px auto;\\n  box-shadow: 2px 4px 6px #ededed;\\n  /* border: 1px solid #eee; */\\n  border: 2px solid #d6d6d6;\\n  padding: 10px 25px;\\n  padding-top: 40px;\\n  border-radius: 3px;\\n\\n}\\n\"","module.exports = \"<div id=\\\"container\\\">\\n\\n  <input class=\\\"userInput\\\" type=\\\"text\\\" [(ngModel)]=\\\"myValue\\\" placeholder=\\\"Please enter your username: \\\"/>\\n  <br>\\n  <input class=\\\"userInput\\\" (keyup.enter)=\\\"login()\\\" type=\\\"password\\\" [(ngModel)]=\\\"myPwd\\\" placeholder=\\\"Please enter your password: \\\"/>\\n\\n\\n\\n  <button id=\\\"newUserButton\\\" (click)=\\\"login()\\\">Login</button>\\n\\n  <div id=\\\"error\\\">{{errorMessage}}</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from '../chat.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nexport interface User {\n  username: string;\n  success: number;\n  auth: any;\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent{\ntitle = 'app';\nmyValue = '';\nusername = 'Codie';\nprivate url = 'http://localhost:3000';\nisUser = false;\nerrorMessage = \"\";\nmyPwd;\nconstructor(private authService: AuthService, private chatService: ChatService, private http:HttpClient, private router:Router){\n\n}\nlogin() {\n  // TODO: THis needs to be moved to a new auth service. As per http video.\n  // return this.http.post<User>('/api/auth', {username: \"Codie\", password: \"test\"});\n  this.authService.login(this.myValue, this.myPwd).subscribe(\n    data=>{\n      console.log(data);\n      if(data.success){\n\n        localStorage.setItem('user_auth', data.auth);\n        localStorage.setItem('currentUser', this.myValue);\n\n        this.router.navigateByUrl('/groups/' + this.myValue, { skipLocationChange: true });\n      }\n      else{\n        this.errorMessage = \"Username is not registered\";\n      }\n\n\n    },\n    error => {\n      console.log(\"Error\");\n    }\n  )\n\n}\n// newUser() {\n//   this.authService.newUser(this.myValue, \"Test\").subscribe(\n//     data=> {\n//       console.log(data);\n//     }\n//   )\n// }\nloginUser(userString: string) {\n  //returns the user interface from server get request\n\n  this.http.get<User>(this.url + \"/api/auth?username=\"+userString).subscribe(data => {\n    console.log(data);\n    if (data.success){\n\n      //Is a valid user\n      this.isUser = true;\n      localStorage.setItem('myData', JSON.stringify(data));\n\n      this.router.navigateByUrl('/groups/' + userString, { skipLocationChange: true });\n      //Navigate to the groups component\n\n    }\n    else {\n      this.errorMessage = \"Username or Password is Incorrect\";\n      // Not a valid user\n      \n    }\n  });\n  this.username = userString;\n  localStorage.setItem(\"username\", userString);\n  this.myValue = \"\";\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private url = 'http://localhost:3000';\n  private socket;\n  constructor() {\n  }\n\n  sendMessage(message){\n    this.socket.emit('add-message', message);\n\n  }\n  joinChannel(channel, user){\n    this.socket.emit('room', channel, user);\n\n\n  }\n\n  getMessages(){\n    console.log('getMessages()');\n    this.socket = io(this.url);\n\n    // We define our observable which will observe any incoming messages\n    // from our socket.io server.\n    let observable = new Observable(observer => {\n        this.socket.on('message', (data) => {\n          console.log(\"Received message from Websocket Server\")\n          observer.next(data);\n        })\n        return () => {\n          this.socket.disconnect();\n        }\n    });\n\n    // We return our observable\n    return observable;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}